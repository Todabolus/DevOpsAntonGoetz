name: CD-Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'api/**'
      - 'storage/**'
      - 'Dockerfile'
      - '.github/workflows/cd.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: clevercash
          POSTGRES_USER: clever
          POSTGRES_PASSWORD: clever
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U clever"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull backend image
        run: docker pull ghcr.io/${{ github.repository }}:latest

      - name: Run backend container
        run: |
          docker network create clever-net
          docker run -d --name clever-backend \
            --network clever-net \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/clevercash \
            -e SPRING_DATASOURCE_USERNAME=clever \
            -e SPRING_DATASOURCE_PASSWORD=clever \
            -p 8080:8080 \
            ghcr.io/${{ github.repository }}:latest

      - name: Wait until application is healthy
        run: |
          echo "⏳ Warte auf /actuator/health ..."
          for i in {1..30}; do
            if curl -fs http://localhost:8080/actuator/health > /dev/null; then
              echo "✅ Anwendung ist bereit"
              exit 0
            fi
            sleep 5
          done
          echo "❌ Anwendung wurde nicht gesund"
          docke
